{
  "name": "apache-solr-for-typo3/tika",
  "type": "typo3-cms-extension",
  "description": "Apache Tika for TYPO3",
  "license": "GPL-3.0-or-later",
  "keywords": ["typo3", "cms", "tika", "meta data", "language", "text", "extraction"],
  "homepage": "https://www.typo3-solr.com",
  "authors": [
    {
      "name": "Ingo Renner",
      "email": "ingo@typo3.org",
      "role": "Lead Developer"
    }
  ],
  "support": {
    "email": "solr-eb-support@dkd.de",
    "issues": "https://github.com/TYPO3-Solr/ext-tika/issues",
    "forum": "https://talk.typo3.org",
    "slack": "https://typo3.slack.com/app_redirect?channel=C02FF05Q4",
    "source": "https://github.com/TYPO3-Solr/ext-tika"
  },
  "replace": {
    "typo3-ter/tika": "self.version"
  },
  "require": {
    "php": "^8.2",
    "ext-json": "*",
    "typo3/cms-backend": "*",
    "typo3/cms-core": "^v13.4.2",
    "typo3/cms-extbase": "*",
    "typo3/cms-filemetadata": "*",
    "typo3/cms-fluid": "*",
    "typo3/cms-reports": "*"
  },
  "require-dev": {
    "apache-solr-for-typo3/solr": "13.0.x-dev",
    "dg/bypass-finals": "^1.6",
    "phpstan/phpstan": "^1.12",
    "phpstan/phpstan-phpunit": "^1.4",
    "phpunit/phpunit": "^11.4",
    "typo3/cms-lowlevel": "*",
    "typo3/coding-standards": "v0.8.0",
    "typo3/testing-framework": "^9.0.1"
  },
  "suggest": {
    "apache-solr-for-typo3/solr": "Allows to use Solr Cell - Apache Tika embedded in Apache Solr.",
    "apache-solr-for-typo3/solrfal": "EXT:tika + EXT:solrfal make the files(TYPO3 FAL) indexable and searchable within EXT:solr."
  },
  "autoload": {
    "psr-4": {
      "ApacheSolrForTypo3\\Tika\\": "Classes/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "ApacheSolrForTypo3\\Solr\\Tests\\": ".Build/vendor/apache-solr-for-typo3/solr/Tests/",
      "ApacheSolrForTypo3\\Tika\\Tests\\": "Tests/",
      "TYPO3\\CMS\\Core\\Tests\\": ".Build/vendor/typo3/cms-core/Tests/"
    }
  },
  "minimum-stability": "dev",
  "prefer-stable": true,
  "config": {
    "allow-plugins": true,
    "optimize-autoloader": true,
    "vendor-dir": ".Build/vendor",
    "bin-dir": ".Build/bin",
    "preferred-install": {
      "apache-solr-for-typo3/solr": "source",
      "typo3/cms-core": "source",
      "*": "dist"
    }
  },
  "scripts-descriptions": {
    "t3:docs:build": "Renders the docs. Note: Can not run inside docker container, because uses TYPO3 dockrun_t3rd",
    "t3:docs:build:prod": "Same as t3:docs:build, but places the rendered docs in Resources/Public/Documentation and symlinks them to EXT:tika/Documentation.HTML",
    "t3:docs:clean": "Deletes all rendered docs created by t3:docs:build or t3:docs:build:prod.",
    "t3:standards:check": "Checks for TYPO3 coding standards errors.",
    "t3:standards:fix": "Fixes a possible TYPO3 coding standards errors.",

    "tests:env":  "Checks the requirements in environment for tests.",
    "tests:integration": "Runs integration tests",
    "tests:lint-php": "Lints the PHP files.",
    "tests:lint-xml": "Lints the XML/XLF files.",
    "tests:phpstan": "Runs PHPStan analys",
    "tests:restore-git": "[Internal script], which is used after tests:setup to restore the composer.json.",
    "tests:setup": "Installs composer dependencies, required for tests.",
    "tests:unit": "Runs unit tests",

    "tika:download": "Download Tika binaries/\".jar\" files. App and Server files.",
    "tika:download:app": "Download Tika app binariy/\".jar\" file only.",
    "tika:download:help": "Prints help from download script.",
    "tika:download:server": "Download Tika server binariy/\".jar\" file only.",
    "tika:req:solr": "Print required Apache Solr version.",
    "tika:req:tika": "Print required Apache Tika version."
  },
  "scripts": {
    "post-autoload-dump": [
      "mkdir -p .Build/vendor/apache-solr-for-typo3",
      "[ -L .Build/vendor/apache-solr-for-typo3/tika ] || ln -snvf ../../../. .Build/vendor/apache-solr-for-typo3/tika"
    ],
    "t3:docs:build": [
      "rm -Rf Documentation-GENERATED-temp/",
      ".Build/vendor/apache-solr-for-typo3/solr/Build/generate_documentation.sh"
    ],
    "t3:docs:build:prod": [
      "BUILD_DOCS_FOR_PRODUCTION=1 $COMPOSER_BINARY t3:docs:build"
    ],
    "t3:docs:clean": [
      "rm -Rf Documentation-GENERATED-temp/ $(readlink -f Documentation.HTML) Documentation.HTML"
    ],
    "tika:download": [ "CALLED_VIA_COMPOSER=1 REQUIRED_TIKA_VERSION=$($COMPOSER_BINARY tika:req:tika) ./Build/Helpers/download_tika_binaries.sh"],
    "tika:download:app": [ "@tika:download -a" ],
    "tika:download:help": [ "@tika:download -h" ],
    "tika:download:server": [ "@tika:download -s" ],
    "tika:req:tika": [ "@composer config extra.TYPO3-Solr.ext-tika.require.Tika" ],
    "tika:req:solr": [ "@composer config extra.TYPO3-Solr.ext-tika.require.Solr" ],

    "tests:restore-git": "echo \"Retore composer.json to initial state:\" && git checkout composer.json",
    "tests:env": [
      "if [ -z ${TYPO3_VERSION+x} ]; then >&2 echo \"Can not proceed, because env var TYPO3_VERSION is not set\"; exit 1; else echo \"Setup test environment for TYPO3 ${TYPO3_VERSION}\"; fi",
      "if [ -z ${TIKA_PATH+x} ]; then echo \"Can not proceed, because env var TIKA_PATH is not set\"; exit 1; fi",
      "if echo $TYPO3_VERSION | grep -q \"dev\"; then $COMPOSER_BINARY config minimum-stability dev; fi"
    ],
    "tests:setup:global-require": [
      "echo \"Install global composer dependencies.\"",
      "@composer global require sclable/xml-lint --ignore-platform-reqs"
    ],
    "tests:setup": [
      "# @todo: Abort if composer.json has not staged/commited changes on composer.json, to avoid losing necessery changes.",
      "@tests:env",
      "@composer req --update-with-all-dependencies typo3/cms-core:${TYPO3_VERSION}",
      "cp .Build/vendor/apache-solr-for-typo3/solr/.php-cs-fixer.php .",
      "@tests:restore-git",
      "if [ ! -f \"${TIKA_PATH}/tika-app-$($COMPOSER_BINARY tika:req:tika).jar\" ]; then $COMPOSER_BINARY tika:download -- -D \"${TIKA_PATH}\" -C -a; fi"
    ],
    "tests:unit": [ "phpunit --colors -c Build/Test/UnitTests.xml" ],
    "tests:integration": [ "phpunit --colors -c Build/Test/IntegrationTests.xml" ],
    "tests:phpstan": [
      "COMPOSER_VENDOR_DIR=$($COMPOSER_BINARY config vendor-dir) phpstan analyze -c Build/Test/phpstan.neon"
    ],
    "t3:standards:check": [
      "php-cs-fixer check --diff"
    ],
    "t3:standards:fix": [
      "php-cs-fixer fix"
    ],
    "tests:lint-php": [
      "if ! find . -name \\*.php ! -path \"./.Build/*\" 2>/dev/null | parallel --gnu php -d display_errors=stderr -l {} > /dev/null; then echo \"There are syntax errors, please check and fix them.\" && export EXIT_CODE=1; else echo \"No syntax errors! Great job!\"; fi"
    ],
    "tests:lint-xml": [
      "echo \"Run XML Lint\"",
      "if ! $($COMPOSER_BINARY config home)/vendor/bin/xmllint Resources/Private/Language/ --pattern='*.xlf' --exclude=.Build/*; then echo \"Some XML files are not valid\" && echo \"Please fix the files listed above\" && export EXIT_CODE=4; else echo \"No syntax errors! Great job!\"; fi"
    ]
  },
  "extra": {
    "branch-alias": {
      "dev-main": "13.0.x-dev"
    },
    "typo3/cms": {
      "extension-key": "tika",
      "cms-package-dir": "{$vendor-dir}/typo3/cms",
      "web-dir": ".Build/Web"
    },
    "TYPO3-Solr": {
      "ext-tika": {
        "require": {
          "Tika": "1.28.5",
          "Solr": "9.7.*",
          "EXT:solr": "13.0.*"
        }
      }
    }
  }
}
